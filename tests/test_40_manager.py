import os.path
from typing import Any

import pytest
import pytest_mock
import sqlalchemy as sa

from cads_catalogue import (
    config,
    database,
    licence_manager,
    manager,
    object_storage,
    utils,
)

THIS_PATH = os.path.abspath(os.path.dirname(__file__))
TESTDATA_PATH = os.path.join(THIS_PATH, "data")


def test_load_resource_for_object_storage() -> None:
    folder_path = os.path.join(TESTDATA_PATH, "cads-forms-json", "reanalysis-era5-land")
    res = manager.load_resource_for_object_storage(folder_path)
    assert res == {
        "constraints": os.path.join(folder_path, "constraints.json"),
        "previewimage": os.path.join(folder_path, "overview.png"),
    }


def test_parse_override_md() -> None:
    # override file is not set
    assert manager.parse_override_md(None) == dict()
    # override file not exist
    overrides_path = os.path.join(TESTDATA_PATH, "notexist.yaml")
    assert manager.parse_override_md(overrides_path) == dict()
    # override file not valid
    overrides_path = os.path.join(TESTDATA_PATH, "override1.yaml")
    assert manager.parse_override_md(overrides_path) == dict()
    # consistent override info
    overrides_path = os.path.join(TESTDATA_PATH, "override2.yaml")
    expected = {
        "reanalysis-era5-land": {
            "qa_flag": False,
            "hidden": True,
            "disabled_reason": "A reason",
            "portal": "c3s2",
            "abstract": "an abstract",
            "begin_date": "1960-11-02",
            "contactemail": "an@email",
            "doi": "20.24381/cds.22161bac",
            "ds_contactemail": "https://support.ecmwf.com",
            "ds_responsible_organisation": "ORG1",
            "ds_responsible_organisation_role": None,
            "format_version": None,
            "high_priority_terms": "ERA5 reanalysis temperature",
            "lineage": "Copernicus Atmospheric Monitoring Service",
            "popularity": 200,
            "publication_date": "2022-06-01",
            "representative_fraction": 0.5,
            "responsible_organisation": "Org2",
            "responsible_organisation_role": "pointOfContact2",
            "responsible_organisation_website": "http://a/website.com",
            "title": "a title",
            "topic": "a topic",
            "unit_measure": "degree",
            "use_limitation": "Content accessible through the CDS",
            "api_enforce_constraints": False,
        },
        "reanalysis-era5-pressure-levels": {},
        "reanalysis-era5-single-levels": {
            "hidden": False,
            "portal": "ads",
            "qa_flag": True,
        },
    }
    assert manager.parse_override_md(overrides_path) == expected


def test_load_resource_from_folder() -> None:
    resource_folder_path = os.path.join(
        TESTDATA_PATH, "cads-forms-json", "reanalysis-era5-land"
    )
    resource = manager.load_resource_from_folder(resource_folder_path)
    expected_resource: dict[str, Any] = {
        "resource_uid": "reanalysis-era5-land",
        "constraints": os.path.join(
            TESTDATA_PATH, "cads-forms-json/reanalysis-era5-land/constraints.json"
        ),
        "previewimage": os.path.join(
            TESTDATA_PATH, "cads-forms-json/reanalysis-era5-land/overview.png"
        ),
        "fulltext": None,
        "adaptor_configuration": {
            "entry_point": "cads_adaptors:MarsCdsAdaptor",
            "format_conversion": {
                "netcdf.zip": {
                    "always_zip": [True],
                    "zip_compression_kwargs": {"compression": "ZIP_DEFLATED"},
                    "system_call": [
                        "/opt/ecmwf/eccodes/bin/grib_to_netcdf",
                        "-S",
                        "param",
                        "-o",
                        "{{outfile}}",
                        "{{infile}}",
                    ],
                },
                "netcdf4": {
                    "system_call": [
                        "cfgrib",
                        "to_netcdf",
                        "-o",
                        "{{outfile}}",
                        "{{infile}}",
                    ]
                },
            },
            "embargo": {"days": 5, "hours": 0},
            "mapping": {
                "selection_limit": 1000,
                "selection_limit_ignore": ["area", "grid"],
                "remap": {
                    "format": {"netcdf_3": "netcdf", "zipped_netcdf_3": "netcdf.zip"},
                    "month": {
                        "february": "02",
                        "october": "10",
                        "august": "08",
                        "november": "11",
                        "march": "03",
                        "may": "05",
                        "september": "09",
                        "january": "01",
                        "april": "04",
                        "december": "12",
                        "june": "06",
                        "july": "07",
                    },
                    "variable": {
                        "evaporation_from_bare_soil": "228101",
                        "surface_runoff": "8",
                        "soil_temperature_level_4": "236",
                        "evaporation_from_open_water_surfaces_excluding_oceans": "228102",
                        "temperature_of_snow_layer": "238",
                        "snow_cover": "260038",
                        "lake_bottom_temperature": "228010",
                        "total_precipitation": "228",
                        "leaf_area_index_low_vegetation": "66",
                        "lake_mix_layer_depth": "228009",
                        "snowmelt": "45",
                        "surface_net_solar_radiation": "176",
                        "snowfall": "144",
                        "surface_sensible_heat_flux": "146",
                        "snow_density": "33",
                        "forecast_albedo": "243",
                        "surface_pressure": "134",
                        "evaporation_from_vegetation_transpiration": "228103",
                        "volumetric_soil_water_layer_4": "42",
                        "lake_ice_depth": "228014",
                        "lake_shape_factor": "228012",
                        "surface_latent_heat_flux": "147",
                        "snow_depth": "3066",
                        "potential_evaporation": "228251",
                        "leaf_area_index_high_vegetation": "67",
                        "lake_mix_layer_temperature": "228008",
                        "runoff": "205",
                        "10m_u_component_of_wind": "165",
                        "soil_temperature_level_3": "183",
                        "2m_dewpoint_temperature": "168",
                        "surface_net_thermal_radiation": "177",
                        "2m_temperature": "167",
                        "snow_albedo": "32",
                        "surface_solar_radiation_downwards": "169",
                        "snow_evaporation": "44",
                        "surface_thermal_radiation_downwards": "175",
                        "skin_temperature": "235",
                        "total_evaporation": "182",
                        "lake_total_layer_temperature": "228011",
                        "10m_v_component_of_wind": "166",
                        "soil_temperature_level_1": "139",
                        "volumetric_soil_water_layer_3": "41",
                        "sub_surface_runoff": "9",
                        "lake_ice_temperature": "228013",
                        "skin_reservoir_content": "198",
                        "evaporation_from_the_top_of_canopy": "228100",
                        "volumetric_soil_water_layer_1": "39",
                        "snow_depth_water_equivalent": "141",
                        "volumetric_soil_water_layer_2": "40",
                        "soil_temperature_level_2": "170",
                    },
                    "expect": {},
                    "number": {},
                    "levtype": {},
                    "class": {},
                    "product_type": {},
                    "time": {},
                    "year": {},
                    "day": {},
                },
                "force": {
                    "expect": ["any"],
                    "number": ["all"],
                    "levtype": ["sfc"],
                    "class": ["l5"],
                    "product_type": ["reanalysis"],
                },
                "options": {"wants_dates": True},
                "rename": {},
            },
        },
        "constraints_data": [
            {
                "day": [
                    "01",
                    "02",
                    "03",
                    "04",
                    "05",
                    "06",
                    "07",
                    "08",
                    "09",
                    "10",
                    "11",
                ],
                "format": ["grib", "netcdf_3", "zipped_netcdf_3"],
                "month": ["february"],
                "time": [
                    "00:00",
                    "01:00",
                    "02:00",
                    "03:00",
                    "04:00",
                    "05:00",
                    "06:00",
                    "07:00",
                    "08:00",
                    "09:00",
                    "10:00",
                    "11:00",
                    "12:00",
                    "13:00",
                    "14:00",
                    "15:00",
                    "16:00",
                    "17:00",
                    "18:00",
                    "19:00",
                    "20:00",
                    "21:00",
                    "22:00",
                    "23:00",
                ],
                "variable": [
                    "surface_pressure",
                    "soil_temperature_level_1",
                    "snow_depth_water_equivalent",
                    "snowfall",
                    "surface_sensible_heat_flux",
                    "surface_latent_heat_flux",
                    "10m_u_component_of_wind",
                    "10m_v_component_of_wind",
                    "2m_temperature",
                    "2m_dewpoint_temperature",
                    "surface_solar_radiation_downwards",
                    "soil_temperature_level_2",
                    "surface_thermal_radiation_downwards",
                    "surface_net_solar_radiation",
                    "surface_net_thermal_radiation",
                    "total_evaporation",
                    "soil_temperature_level_3",
                    "skin_reservoir_content",
                    "runoff",
                    "total_precipitation",
                    "lake_mix_layer_temperature",
                    "lake_mix_layer_depth",
                    "lake_bottom_temperature",
                    "lake_total_layer_temperature",
                    "lake_shape_factor",
                    "lake_ice_temperature",
                    "lake_ice_depth",
                    "evaporation_from_the_top_of_canopy",
                    "evaporation_from_bare_soil",
                    "evaporation_from_open_water_surfaces_excluding_oceans",
                    "evaporation_from_vegetation_transpiration",
                    "potential_evaporation",
                    "skin_temperature",
                    "soil_temperature_level_4",
                    "temperature_of_snow_layer",
                    "forecast_albedo",
                    "snow_cover",
                    "snow_depth",
                    "snow_albedo",
                    "snow_density",
                    "volumetric_soil_water_layer_1",
                    "volumetric_soil_water_layer_2",
                    "volumetric_soil_water_layer_3",
                    "volumetric_soil_water_layer_4",
                    "snow_evaporation",
                    "snowmelt",
                    "leaf_area_index_low_vegetation",
                    "leaf_area_index_high_vegetation",
                    "surface_runoff",
                    "sub_surface_runoff",
                ],
                "year": ["2023"],
            },
            {
                "day": [
                    "01",
                    "02",
                    "03",
                    "04",
                    "05",
                    "06",
                    "07",
                    "08",
                    "09",
                    "10",
                    "11",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                    "18",
                    "19",
                    "20",
                    "21",
                    "22",
                    "23",
                    "24",
                    "25",
                    "26",
                    "27",
                    "28",
                ],
                "format": ["grib", "netcdf_3", "zipped_netcdf_3"],
                "month": ["february"],
                "time": [
                    "00:00",
                    "01:00",
                    "02:00",
                    "03:00",
                    "04:00",
                    "05:00",
                    "06:00",
                    "07:00",
                    "08:00",
                    "09:00",
                    "10:00",
                    "11:00",
                    "12:00",
                    "13:00",
                    "14:00",
                    "15:00",
                    "16:00",
                    "17:00",
                    "18:00",
                    "19:00",
                    "20:00",
                    "21:00",
                    "22:00",
                    "23:00",
                ],
                "variable": [
                    "surface_pressure",
                    "soil_temperature_level_1",
                    "snow_depth_water_equivalent",
                    "snowfall",
                    "surface_sensible_heat_flux",
                    "surface_latent_heat_flux",
                    "10m_u_component_of_wind",
                    "10m_v_component_of_wind",
                    "2m_temperature",
                    "2m_dewpoint_temperature",
                    "surface_solar_radiation_downwards",
                    "soil_temperature_level_2",
                    "surface_thermal_radiation_downwards",
                    "surface_net_solar_radiation",
                    "surface_net_thermal_radiation",
                    "total_evaporation",
                    "soil_temperature_level_3",
                    "skin_reservoir_content",
                    "runoff",
                    "total_precipitation",
                    "lake_mix_layer_temperature",
                    "lake_mix_layer_depth",
                    "lake_bottom_temperature",
                    "lake_total_layer_temperature",
                    "lake_shape_factor",
                    "lake_ice_temperature",
                    "lake_ice_depth",
                    "evaporation_from_the_top_of_canopy",
                    "evaporation_from_bare_soil",
                    "evaporation_from_open_water_surfaces_excluding_oceans",
                    "evaporation_from_vegetation_transpiration",
                    "potential_evaporation",
                    "skin_temperature",
                    "soil_temperature_level_4",
                    "temperature_of_snow_layer",
                    "forecast_albedo",
                    "snow_cover",
                    "snow_depth",
                    "snow_albedo",
                    "snow_density",
                    "volumetric_soil_water_layer_1",
                    "volumetric_soil_water_layer_2",
                    "volumetric_soil_water_layer_3",
                    "volumetric_soil_water_layer_4",
                    "snow_evaporation",
                    "snowmelt",
                    "leaf_area_index_low_vegetation",
                    "leaf_area_index_high_vegetation",
                    "surface_runoff",
                    "sub_surface_runoff",
                ],
                "year": [
                    "1950",
                    "1951",
                    "1953",
                    "1954",
                    "1955",
                    "1957",
                    "1958",
                    "1959",
                    "1961",
                    "1962",
                    "1963",
                    "1965",
                    "1966",
                    "1967",
                    "1969",
                    "1970",
                    "1971",
                    "1973",
                    "1974",
                    "1975",
                    "1977",
                    "1978",
                    "1979",
                    "1981",
                    "1982",
                    "1983",
                    "1985",
                    "1986",
                    "1987",
                    "1989",
                    "1990",
                    "1991",
                    "1993",
                    "1994",
                    "1995",
                    "1997",
                    "1998",
                    "1999",
                    "2001",
                    "2002",
                    "2003",
                    "2005",
                    "2006",
                    "2007",
                    "2009",
                    "2010",
                    "2011",
                    "2013",
                    "2014",
                    "2015",
                    "2017",
                    "2018",
                    "2019",
                    "2021",
                    "2022",
                ],
            },
            {
                "day": [
                    "01",
                    "02",
                    "03",
                    "04",
                    "05",
                    "06",
                    "07",
                    "08",
                    "09",
                    "10",
                    "11",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                    "18",
                    "19",
                    "20",
                    "21",
                    "22",
                    "23",
                    "24",
                    "25",
                    "26",
                    "27",
                    "28",
                    "29",
                ],
                "format": ["grib", "netcdf_3", "zipped_netcdf_3"],
                "month": ["february"],
                "time": [
                    "00:00",
                    "01:00",
                    "02:00",
                    "03:00",
                    "04:00",
                    "05:00",
                    "06:00",
                    "07:00",
                    "08:00",
                    "09:00",
                    "10:00",
                    "11:00",
                    "12:00",
                    "13:00",
                    "14:00",
                    "15:00",
                    "16:00",
                    "17:00",
                    "18:00",
                    "19:00",
                    "20:00",
                    "21:00",
                    "22:00",
                    "23:00",
                ],
                "variable": [
                    "surface_pressure",
                    "soil_temperature_level_1",
                    "snow_depth_water_equivalent",
                    "snowfall",
                    "surface_sensible_heat_flux",
                    "surface_latent_heat_flux",
                    "10m_u_component_of_wind",
                    "10m_v_component_of_wind",
                    "2m_temperature",
                    "2m_dewpoint_temperature",
                    "surface_solar_radiation_downwards",
                    "soil_temperature_level_2",
                    "surface_thermal_radiation_downwards",
                    "surface_net_solar_radiation",
                    "surface_net_thermal_radiation",
                    "total_evaporation",
                    "soil_temperature_level_3",
                    "skin_reservoir_content",
                    "runoff",
                    "total_precipitation",
                    "lake_mix_layer_temperature",
                    "lake_mix_layer_depth",
                    "lake_bottom_temperature",
                    "lake_total_layer_temperature",
                    "lake_shape_factor",
                    "lake_ice_temperature",
                    "lake_ice_depth",
                    "evaporation_from_the_top_of_canopy",
                    "evaporation_from_bare_soil",
                    "evaporation_from_open_water_surfaces_excluding_oceans",
                    "evaporation_from_vegetation_transpiration",
                    "potential_evaporation",
                    "skin_temperature",
                    "soil_temperature_level_4",
                    "temperature_of_snow_layer",
                    "forecast_albedo",
                    "snow_cover",
                    "snow_depth",
                    "snow_albedo",
                    "snow_density",
                    "volumetric_soil_water_layer_1",
                    "volumetric_soil_water_layer_2",
                    "volumetric_soil_water_layer_3",
                    "volumetric_soil_water_layer_4",
                    "snow_evaporation",
                    "snowmelt",
                    "leaf_area_index_low_vegetation",
                    "leaf_area_index_high_vegetation",
                    "surface_runoff",
                    "sub_surface_runoff",
                ],
                "year": [
                    "1952",
                    "1956",
                    "1960",
                    "1964",
                    "1968",
                    "1972",
                    "1976",
                    "1980",
                    "1984",
                    "1988",
                    "1992",
                    "1996",
                    "2000",
                    "2004",
                    "2008",
                    "2012",
                    "2016",
                    "2020",
                ],
            },
            {
                "day": [
                    "01",
                    "02",
                    "03",
                    "04",
                    "05",
                    "06",
                    "07",
                    "08",
                    "09",
                    "10",
                    "11",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                    "18",
                    "19",
                    "20",
                    "21",
                    "22",
                    "23",
                    "24",
                    "25",
                    "26",
                    "27",
                    "28",
                    "29",
                    "30",
                ],
                "format": ["grib", "netcdf_3", "zipped_netcdf_3"],
                "month": ["april", "june", "september", "november"],
                "time": [
                    "00:00",
                    "01:00",
                    "02:00",
                    "03:00",
                    "04:00",
                    "05:00",
                    "06:00",
                    "07:00",
                    "08:00",
                    "09:00",
                    "10:00",
                    "11:00",
                    "12:00",
                    "13:00",
                    "14:00",
                    "15:00",
                    "16:00",
                    "17:00",
                    "18:00",
                    "19:00",
                    "20:00",
                    "21:00",
                    "22:00",
                    "23:00",
                ],
                "variable": [
                    "surface_pressure",
                    "soil_temperature_level_1",
                    "snow_depth_water_equivalent",
                    "snowfall",
                    "surface_sensible_heat_flux",
                    "surface_latent_heat_flux",
                    "10m_u_component_of_wind",
                    "10m_v_component_of_wind",
                    "2m_temperature",
                    "2m_dewpoint_temperature",
                    "surface_solar_radiation_downwards",
                    "soil_temperature_level_2",
                    "surface_thermal_radiation_downwards",
                    "surface_net_solar_radiation",
                    "surface_net_thermal_radiation",
                    "total_evaporation",
                    "soil_temperature_level_3",
                    "skin_reservoir_content",
                    "runoff",
                    "total_precipitation",
                    "lake_mix_layer_temperature",
                    "lake_mix_layer_depth",
                    "lake_bottom_temperature",
                    "lake_total_layer_temperature",
                    "lake_shape_factor",
                    "lake_ice_temperature",
                    "lake_ice_depth",
                    "evaporation_from_the_top_of_canopy",
                    "evaporation_from_bare_soil",
                    "evaporation_from_open_water_surfaces_excluding_oceans",
                    "evaporation_from_vegetation_transpiration",
                    "potential_evaporation",
                    "skin_temperature",
                    "soil_temperature_level_4",
                    "temperature_of_snow_layer",
                    "forecast_albedo",
                    "snow_cover",
                    "snow_depth",
                    "snow_albedo",
                    "snow_density",
                    "volumetric_soil_water_layer_1",
                    "volumetric_soil_water_layer_2",
                    "volumetric_soil_water_layer_3",
                    "volumetric_soil_water_layer_4",
                    "snow_evaporation",
                    "snowmelt",
                    "leaf_area_index_low_vegetation",
                    "leaf_area_index_high_vegetation",
                    "surface_runoff",
                    "sub_surface_runoff",
                ],
                "year": [
                    "1950",
                    "1951",
                    "1952",
                    "1953",
                    "1954",
                    "1955",
                    "1956",
                    "1957",
                    "1958",
                    "1959",
                    "1960",
                    "1961",
                    "1962",
                    "1963",
                    "1964",
                    "1965",
                    "1966",
                    "1967",
                    "1968",
                    "1969",
                    "1970",
                    "1971",
                    "1972",
                    "1973",
                    "1974",
                    "1975",
                    "1976",
                    "1977",
                    "1978",
                    "1979",
                    "1980",
                    "1981",
                    "1982",
                    "1983",
                    "1984",
                    "1985",
                    "1986",
                    "1987",
                    "1988",
                    "1989",
                    "1990",
                    "1991",
                    "1992",
                    "1993",
                    "1994",
                    "1995",
                    "1996",
                    "1997",
                    "1998",
                    "1999",
                    "2000",
                    "2001",
                    "2002",
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017",
                    "2018",
                    "2019",
                    "2020",
                    "2021",
                    "2022",
                ],
            },
            {
                "day": [
                    "01",
                    "02",
                    "03",
                    "04",
                    "05",
                    "06",
                    "07",
                    "08",
                    "09",
                    "10",
                    "11",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                    "18",
                    "19",
                    "20",
                    "21",
                    "22",
                    "23",
                    "24",
                    "25",
                    "26",
                    "27",
                    "28",
                    "29",
                    "30",
                    "31",
                ],
                "format": ["grib", "netcdf_3", "zipped_netcdf_3"],
                "month": ["january"],
                "time": ["00:00"],
                "variable": [
                    "surface_pressure",
                    "soil_temperature_level_1",
                    "snow_depth_water_equivalent",
                    "snowfall",
                    "surface_sensible_heat_flux",
                    "surface_latent_heat_flux",
                    "10m_u_component_of_wind",
                    "10m_v_component_of_wind",
                    "2m_temperature",
                    "2m_dewpoint_temperature",
                    "surface_solar_radiation_downwards",
                    "soil_temperature_level_2",
                    "surface_thermal_radiation_downwards",
                    "surface_net_solar_radiation",
                    "surface_net_thermal_radiation",
                    "total_evaporation",
                    "soil_temperature_level_3",
                    "skin_reservoir_content",
                    "runoff",
                    "total_precipitation",
                    "lake_mix_layer_temperature",
                    "lake_mix_layer_depth",
                    "lake_bottom_temperature",
                    "lake_total_layer_temperature",
                    "lake_shape_factor",
                    "lake_ice_temperature",
                    "lake_ice_depth",
                    "evaporation_from_the_top_of_canopy",
                    "evaporation_from_bare_soil",
                    "evaporation_from_open_water_surfaces_excluding_oceans",
                    "evaporation_from_vegetation_transpiration",
                    "potential_evaporation",
                    "skin_temperature",
                    "soil_temperature_level_4",
                    "temperature_of_snow_layer",
                    "forecast_albedo",
                    "snow_cover",
                    "snow_depth",
                    "snow_albedo",
                    "snow_density",
                    "volumetric_soil_water_layer_1",
                    "volumetric_soil_water_layer_2",
                    "volumetric_soil_water_layer_3",
                    "volumetric_soil_water_layer_4",
                    "snow_evaporation",
                    "snowmelt",
                    "leaf_area_index_low_vegetation",
                    "leaf_area_index_high_vegetation",
                    "surface_runoff",
                    "sub_surface_runoff",
                ],
                "year": [
                    "1951",
                    "1952",
                    "1953",
                    "1954",
                    "1955",
                    "1956",
                    "1957",
                    "1958",
                    "1959",
                    "1960",
                    "1961",
                    "1962",
                    "1963",
                    "1964",
                    "1965",
                    "1966",
                    "1967",
                    "1968",
                    "1969",
                    "1970",
                    "1971",
                    "1972",
                    "1973",
                    "1974",
                    "1975",
                    "1976",
                    "1977",
                    "1978",
                    "1979",
                    "1980",
                    "1981",
                    "1982",
                    "1983",
                    "1984",
                    "1985",
                    "1986",
                    "1987",
                    "1988",
                    "1989",
                    "1990",
                    "1991",
                    "1992",
                    "1993",
                    "1994",
                    "1995",
                    "1996",
                    "1997",
                    "1998",
                    "1999",
                    "2000",
                    "2001",
                    "2002",
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017",
                    "2018",
                    "2019",
                    "2020",
                    "2021",
                    "2022",
                ],
            },
            {
                "day": [
                    "01",
                    "02",
                    "03",
                    "04",
                    "05",
                    "06",
                    "07",
                    "08",
                    "09",
                    "10",
                    "11",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                    "18",
                    "19",
                    "20",
                    "21",
                    "22",
                    "23",
                    "24",
                    "25",
                    "26",
                    "27",
                    "28",
                    "29",
                    "30",
                    "31",
                ],
                "format": ["grib", "netcdf_3", "zipped_netcdf_3"],
                "month": ["january"],
                "time": ["00:00"],
                "variable": [
                    "soil_temperature_level_1",
                    "snow_depth_water_equivalent",
                    "soil_temperature_level_2",
                    "soil_temperature_level_3",
                    "skin_reservoir_content",
                    "lake_mix_layer_temperature",
                    "lake_mix_layer_depth",
                    "lake_bottom_temperature",
                    "lake_total_layer_temperature",
                    "lake_shape_factor",
                    "lake_ice_temperature",
                    "lake_ice_depth",
                    "skin_temperature",
                    "soil_temperature_level_4",
                    "temperature_of_snow_layer",
                    "snow_albedo",
                    "snow_density",
                    "volumetric_soil_water_layer_1",
                    "volumetric_soil_water_layer_2",
                    "volumetric_soil_water_layer_3",
                    "volumetric_soil_water_layer_4",
                ],
                "year": ["1950"],
            },
            {
                "day": [
                    "01",
                    "02",
                    "03",
                    "04",
                    "05",
                    "06",
                    "07",
                    "08",
                    "09",
                    "10",
                    "11",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                    "18",
                    "19",
                    "20",
                    "21",
                    "22",
                    "23",
                    "24",
                    "25",
                    "26",
                    "27",
                    "28",
                    "29",
                    "30",
                    "31",
                ],
                "format": ["grib", "netcdf_3", "zipped_netcdf_3"],
                "month": ["january"],
                "time": [
                    "00:00",
                    "01:00",
                    "02:00",
                    "03:00",
                    "04:00",
                    "05:00",
                    "06:00",
                    "07:00",
                    "08:00",
                    "09:00",
                    "10:00",
                    "11:00",
                    "12:00",
                    "13:00",
                    "14:00",
                    "15:00",
                    "16:00",
                    "17:00",
                    "18:00",
                    "19:00",
                    "20:00",
                    "21:00",
                    "22:00",
                    "23:00",
                ],
                "variable": [
                    "surface_pressure",
                    "soil_temperature_level_1",
                    "snow_depth_water_equivalent",
                    "snowfall",
                    "surface_sensible_heat_flux",
                    "surface_latent_heat_flux",
                    "10m_u_component_of_wind",
                    "10m_v_component_of_wind",
                    "2m_temperature",
                    "2m_dewpoint_temperature",
                    "surface_solar_radiation_downwards",
                    "soil_temperature_level_2",
                    "surface_thermal_radiation_downwards",
                    "surface_net_solar_radiation",
                    "surface_net_thermal_radiation",
                    "total_evaporation",
                    "soil_temperature_level_3",
                    "skin_reservoir_content",
                    "runoff",
                    "total_precipitation",
                    "lake_mix_layer_temperature",
                    "lake_mix_layer_depth",
                    "lake_bottom_temperature",
                    "lake_total_layer_temperature",
                    "lake_shape_factor",
                    "lake_ice_temperature",
                    "lake_ice_depth",
                    "evaporation_from_the_top_of_canopy",
                    "evaporation_from_bare_soil",
                    "evaporation_from_open_water_surfaces_excluding_oceans",
                    "evaporation_from_vegetation_transpiration",
                    "potential_evaporation",
                    "skin_temperature",
                    "soil_temperature_level_4",
                    "temperature_of_snow_layer",
                    "forecast_albedo",
                    "snow_cover",
                    "snow_depth",
                    "snow_albedo",
                    "snow_density",
                    "volumetric_soil_water_layer_1",
                    "volumetric_soil_water_layer_2",
                    "volumetric_soil_water_layer_3",
                    "volumetric_soil_water_layer_4",
                    "snow_evaporation",
                    "snowmelt",
                    "leaf_area_index_low_vegetation",
                    "leaf_area_index_high_vegetation",
                    "surface_runoff",
                    "sub_surface_runoff",
                ],
                "year": ["2023"],
            },
            {
                "day": [
                    "01",
                    "02",
                    "03",
                    "04",
                    "05",
                    "06",
                    "07",
                    "08",
                    "09",
                    "10",
                    "11",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                    "18",
                    "19",
                    "20",
                    "21",
                    "22",
                    "23",
                    "24",
                    "25",
                    "26",
                    "27",
                    "28",
                    "29",
                    "30",
                    "31",
                ],
                "format": ["grib", "netcdf_3", "zipped_netcdf_3"],
                "month": [
                    "january",
                    "march",
                    "may",
                    "july",
                    "august",
                    "october",
                    "december",
                ],
                "time": [
                    "01:00",
                    "02:00",
                    "03:00",
                    "04:00",
                    "05:00",
                    "06:00",
                    "07:00",
                    "08:00",
                    "09:00",
                    "10:00",
                    "11:00",
                    "12:00",
                    "13:00",
                    "14:00",
                    "15:00",
                    "16:00",
                    "17:00",
                    "18:00",
                    "19:00",
                    "20:00",
                    "21:00",
                    "22:00",
                    "23:00",
                ],
                "variable": [
                    "surface_pressure",
                    "soil_temperature_level_1",
                    "snow_depth_water_equivalent",
                    "snowfall",
                    "surface_sensible_heat_flux",
                    "surface_latent_heat_flux",
                    "10m_u_component_of_wind",
                    "10m_v_component_of_wind",
                    "2m_temperature",
                    "2m_dewpoint_temperature",
                    "surface_solar_radiation_downwards",
                    "soil_temperature_level_2",
                    "surface_thermal_radiation_downwards",
                    "surface_net_solar_radiation",
                    "surface_net_thermal_radiation",
                    "total_evaporation",
                    "soil_temperature_level_3",
                    "skin_reservoir_content",
                    "runoff",
                    "total_precipitation",
                    "lake_mix_layer_temperature",
                    "lake_mix_layer_depth",
                    "lake_bottom_temperature",
                    "lake_total_layer_temperature",
                    "lake_shape_factor",
                    "lake_ice_temperature",
                    "lake_ice_depth",
                    "evaporation_from_the_top_of_canopy",
                    "evaporation_from_bare_soil",
                    "evaporation_from_open_water_surfaces_excluding_oceans",
                    "evaporation_from_vegetation_transpiration",
                    "potential_evaporation",
                    "skin_temperature",
                    "soil_temperature_level_4",
                    "temperature_of_snow_layer",
                    "forecast_albedo",
                    "snow_cover",
                    "snow_depth",
                    "snow_albedo",
                    "snow_density",
                    "volumetric_soil_water_layer_1",
                    "volumetric_soil_water_layer_2",
                    "volumetric_soil_water_layer_3",
                    "volumetric_soil_water_layer_4",
                    "snow_evaporation",
                    "snowmelt",
                    "leaf_area_index_low_vegetation",
                    "leaf_area_index_high_vegetation",
                    "surface_runoff",
                    "sub_surface_runoff",
                ],
                "year": [
                    "1950",
                    "1951",
                    "1952",
                    "1953",
                    "1954",
                    "1955",
                    "1956",
                    "1957",
                    "1958",
                    "1959",
                    "1960",
                    "1961",
                    "1962",
                    "1963",
                    "1964",
                    "1965",
                    "1966",
                    "1967",
                    "1968",
                    "1969",
                    "1970",
                    "1971",
                    "1972",
                    "1973",
                    "1974",
                    "1975",
                    "1976",
                    "1977",
                    "1978",
                    "1979",
                    "1980",
                    "1981",
                    "1982",
                    "1983",
                    "1984",
                    "1985",
                    "1986",
                    "1987",
                    "1988",
                    "1989",
                    "1990",
                    "1991",
                    "1992",
                    "1993",
                    "1994",
                    "1995",
                    "1996",
                    "1997",
                    "1998",
                    "1999",
                    "2000",
                    "2001",
                    "2002",
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017",
                    "2018",
                    "2019",
                    "2020",
                    "2021",
                    "2022",
                ],
            },
            {
                "day": [
                    "01",
                    "02",
                    "03",
                    "04",
                    "05",
                    "06",
                    "07",
                    "08",
                    "09",
                    "10",
                    "11",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                    "18",
                    "19",
                    "20",
                    "21",
                    "22",
                    "23",
                    "24",
                    "25",
                    "26",
                    "27",
                    "28",
                    "29",
                    "30",
                    "31",
                ],
                "format": ["grib", "netcdf_3", "zipped_netcdf_3"],
                "month": ["march", "may", "july", "august", "october", "december"],
                "time": ["00:00"],
                "variable": [
                    "surface_pressure",
                    "soil_temperature_level_1",
                    "snow_depth_water_equivalent",
                    "snowfall",
                    "surface_sensible_heat_flux",
                    "surface_latent_heat_flux",
                    "10m_u_component_of_wind",
                    "10m_v_component_of_wind",
                    "2m_temperature",
                    "2m_dewpoint_temperature",
                    "surface_solar_radiation_downwards",
                    "soil_temperature_level_2",
                    "surface_thermal_radiation_downwards",
                    "surface_net_solar_radiation",
                    "surface_net_thermal_radiation",
                    "total_evaporation",
                    "soil_temperature_level_3",
                    "skin_reservoir_content",
                    "runoff",
                    "total_precipitation",
                    "lake_mix_layer_temperature",
                    "lake_mix_layer_depth",
                    "lake_bottom_temperature",
                    "lake_total_layer_temperature",
                    "lake_shape_factor",
                    "lake_ice_temperature",
                    "lake_ice_depth",
                    "evaporation_from_the_top_of_canopy",
                    "evaporation_from_bare_soil",
                    "evaporation_from_open_water_surfaces_excluding_oceans",
                    "evaporation_from_vegetation_transpiration",
                    "potential_evaporation",
                    "skin_temperature",
                    "soil_temperature_level_4",
                    "temperature_of_snow_layer",
                    "forecast_albedo",
                    "snow_cover",
                    "snow_depth",
                    "snow_albedo",
                    "snow_density",
                    "volumetric_soil_water_layer_1",
                    "volumetric_soil_water_layer_2",
                    "volumetric_soil_water_layer_3",
                    "volumetric_soil_water_layer_4",
                    "snow_evaporation",
                    "snowmelt",
                    "leaf_area_index_low_vegetation",
                    "leaf_area_index_high_vegetation",
                    "surface_runoff",
                    "sub_surface_runoff",
                ],
                "year": [
                    "1950",
                    "1951",
                    "1952",
                    "1953",
                    "1954",
                    "1955",
                    "1956",
                    "1957",
                    "1958",
                    "1959",
                    "1960",
                    "1961",
                    "1962",
                    "1963",
                    "1964",
                    "1965",
                    "1966",
                    "1967",
                    "1968",
                    "1969",
                    "1970",
                    "1971",
                    "1972",
                    "1973",
                    "1974",
                    "1975",
                    "1976",
                    "1977",
                    "1978",
                    "1979",
                    "1980",
                    "1981",
                    "1982",
                    "1983",
                    "1984",
                    "1985",
                    "1986",
                    "1987",
                    "1988",
                    "1989",
                    "1990",
                    "1991",
                    "1992",
                    "1993",
                    "1994",
                    "1995",
                    "1996",
                    "1997",
                    "1998",
                    "1999",
                    "2000",
                    "2001",
                    "2002",
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017",
                    "2018",
                    "2019",
                    "2020",
                    "2021",
                    "2022",
                ],
            },
            {
                "day": [
                    "02",
                    "03",
                    "04",
                    "05",
                    "06",
                    "07",
                    "08",
                    "09",
                    "10",
                    "11",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                    "18",
                    "19",
                    "20",
                    "21",
                    "22",
                    "23",
                    "24",
                    "25",
                    "26",
                    "27",
                    "28",
                    "29",
                    "30",
                    "31",
                ],
                "format": ["grib", "netcdf_3", "zipped_netcdf_3"],
                "month": ["january"],
                "time": ["00:00"],
                "variable": [
                    "surface_pressure",
                    "snowfall",
                    "surface_sensible_heat_flux",
                    "surface_latent_heat_flux",
                    "10m_u_component_of_wind",
                    "10m_v_component_of_wind",
                    "2m_temperature",
                    "2m_dewpoint_temperature",
                    "surface_solar_radiation_downwards",
                    "surface_thermal_radiation_downwards",
                    "surface_net_solar_radiation",
                    "surface_net_thermal_radiation",
                    "total_evaporation",
                    "runoff",
                    "total_precipitation",
                    "evaporation_from_the_top_of_canopy",
                    "evaporation_from_bare_soil",
                    "evaporation_from_open_water_surfaces_excluding_oceans",
                    "evaporation_from_vegetation_transpiration",
                    "potential_evaporation",
                    "forecast_albedo",
                    "snow_cover",
                    "snow_depth",
                    "snow_evaporation",
                    "snowmelt",
                    "leaf_area_index_low_vegetation",
                    "leaf_area_index_high_vegetation",
                    "surface_runoff",
                    "sub_surface_runoff",
                ],
                "year": ["1950"],
            },
        ],
        "adaptor": None,
        "documentation": [],
        "abstract": "ERA5-Land is a reanalysis dataset providing a consistent view of the evolution "
        "of land variables over several decades at an enhanced resolution compared to ERA5. "
        "ERA5-Land has been produced by replaying the land component of the ECMWF ERA5 "
        "climate reanalysis. Reanalysis combines model data with observations from across"
        " the world into a globally complete and consistent dataset using the laws of "
        "physics. Reanalysis produces data that goes several decades back in time, "
        "providing an accurate description of the climate of the past.",
        "api_enforce_constraints": True,
        "begin_date": "1950-01-01",
        "citation": None,
        "contactemail": "https://support.ecmwf.int",
        "description": [],
        "disabled_reason": None,
        "doi": "10.24381/cds.e2161bac",
        "ds_contactemail": "https://support.ecmwf.int",
        "ds_responsible_organisation": "ECMWF",
        "ds_responsible_organisation_role": "publisher",
        "end_date": "2023-02-11",
        "file_format": ["grib", "netcdf"],
        "format_version": None,
        "geo_extent": {"bboxN": 89, "bboxS": -89, "bboxE": 360, "bboxW": 0},
        "hidden": False,
        "high_priority_terms": "reanalysis ERA5 land",
        "keywords": [
            "Product type: Reanalysis",
            "Spatial coverage: Global",
            "Temporal coverage: Past",
            "Variable domain: Land (hydrology)",
            "Variable domain: Land (physics)",
            "Variable domain: Land (biosphere)",
            "Provider: Copernicus C3S",
        ],
        "licence_uids": ["licence-to-use-copernicus-products"],
        "lineage": "EC Copernicus program",
        "mapping": None,
        "popularity": 500,
        "publication_date": "2019-07-12",
        "related_resources_keywords": [],
        "representative_fraction": 0.25,
        "responsible_organisation": "ECMWF",
        "responsible_organisation_role": "pointOfContact",
        "responsible_organisation_website": "https://www.ecmwf.int/",
        "resource_update": "2023-02-17",
        "portal": "c3s",
        "qa_flag": True,
        "qos_tags": ["tag1", "tag2", "tag3"],
        "sanity_check_conf": None,
        "title": "ERA5-Land hourly data from 1950 to present",
        "topic": "climatologyMeteorologyAtmosphere",
        "type": "dataset",
        "unit_measure": "dd",
        "use_limitation": "Content accessible through the CDS may only be used under the terms"
        " of the licenses attributed to each particular resource.",
        "variables": [],
        "content_size": None,
    }
    assert resource == expected_resource

    overrides_path = os.path.join(TESTDATA_PATH, "override2.yaml")
    override_md = manager.parse_override_md(overrides_path)["reanalysis-era5-land"]
    expected_resource2 = expected_resource.copy()
    expected_resource2.update(override_md)
    resource = manager.load_resource_from_folder(resource_folder_path, override_md)
    assert resource == expected_resource2


def test_resource_sync(
    session_obj: sa.orm.sessionmaker, mocker: pytest_mock.MockerFixture
) -> None:
    my_settings_dict = {
        "object_storage_url": "object/storage/url",
        "storage_admin": "admin1",
        "storage_password": "secret1",
        "catalogue_bucket": "mycatalogue_bucket",
        "document_storage_url": "my/url",
    }
    storage_settings = config.ObjectStorageSettings(**my_settings_dict)
    patch = mocker.patch.object(object_storage, "store_file", return_value="an url")
    resource_folder_path = os.path.join(
        TESTDATA_PATH, "cads-forms-json", "reanalysis-era5-land"
    )
    resource = manager.load_resource_from_folder(resource_folder_path)
    # start without any licence in the db ----------------------------------------------------
    with session_obj() as session:
        with pytest.raises(ValueError):
            manager.resource_sync(session, resource, storage_settings)
    assert patch.call_count == 0
    patch.reset_mock()

    # store licences
    licences_folder_path = os.path.join(TESTDATA_PATH, "cads-licences")
    licences = licence_manager.load_licences_from_folder(licences_folder_path)
    with session_obj() as session:
        for licence in licences:
            licence_uid = licence["licence_uid"]
            licence_manager.licence_sync(
                session, licence_uid, licences, storage_settings
            )
        session.commit()
        db_licences = session.execute(
            sa.text("select licence_uid, licence_id from licences order by licence_uid")
        ).all()
        uid_id_licence_map = dict(db_licences)
    patch.reset_mock()

    # following fields properly tested apart
    resource["form"] = "an url for form.json"
    resource["layout"] = "an url for layout.json"
    resource["form_data"] = "content of form.json"
    # create first dataset --------------------------------------------------------------------
    with session_obj() as session:
        manager.resource_sync(session, resource, storage_settings)
        session.commit()
        assert (
            len(session.scalars(sa.select(database.Resource).limit(1)).first().keywords)
            == 7
        )

    assert patch.call_count == 2
    expected_args_object_storage_calls = [
        (
            os.path.join(resource_folder_path, "overview.png"),
            storage_settings.object_storage_url,
        ),
        (mocker.ANY, storage_settings.object_storage_url),
        (
            os.path.join(resource_folder_path, "constraints.json"),
            storage_settings.object_storage_url,
        ),
    ]
    effective_args_object_storage_calls = [pm.args for pm in patch.mock_calls]
    for expected_args_object_storage_call in expected_args_object_storage_calls:
        assert expected_args_object_storage_call in effective_args_object_storage_calls
    assert effective_args_object_storage_calls[1][0].endswith("overview.png")
    assert {
        "bucket_name": "mycatalogue_bucket",
        "subpath": "resources/reanalysis-era5-land",
        "aws_access_key_id": "admin1",
        "aws_secret_access_key": "secret1",
    } in [pm.kwargs for pm in patch.mock_calls]
    patch.reset_mock()

    # create second dataset  --------------------------------------------------------------------
    resource_folder_path2 = os.path.join(
        TESTDATA_PATH, "cads-forms-json", "reanalysis-era5-land-monthly-means"
    )
    resource2 = manager.load_resource_from_folder(resource_folder_path2)
    # following fields properly tested apart
    resource2["form"] = "an url for form.json"
    resource2["layout"] = "an url for layout.json"
    resource2["form_data"] = "content of form.json"
    with session_obj() as session:
        manager.resource_sync(session, resource2, storage_settings)
        manager.update_related_resources(session)
        session.commit()
        all_db_resources = session.scalars(sa.select(database.Resource)).all()
        assert (
            len(all_db_resources[0].keywords) == len(all_db_resources[1].keywords) == 7
        )

    with session_obj() as session:
        all_db_resources = session.scalars(sa.select(database.Resource)).all()

        utils.compare_resources_with_dumped_file(
            all_db_resources,
            os.path.join(TESTDATA_PATH, "dumped_resources1.txt"),
            exclude_fields=("record_update", "resource_id"),
        )
        assert session.execute(
            sa.text(
                "select resource_id, licence_id "
                "from resources_licences "
                "order by resource_id, licence_id"
            )
        ).all() == [
            (1, uid_id_licence_map["licence-to-use-copernicus-products"]),
            (2, uid_id_licence_map["licence-to-use-copernicus-products"]),
        ]
        assert session.execute(
            sa.text(
                "select parent_resource_id, child_resource_id "
                "from related_resources "
                "order by parent_resource_id"
            )
        ).all() == [(1, 2), (2, 1)]
        assert session.execute(
            sa.text(
                "select resource_id, keyword_id "
                "from resources_keywords "
                "order by resource_id, keyword_id"
            )
        ).all() == [
            (1, 1),
            (1, 2),
            (1, 3),
            (1, 4),
            (1, 5),
            (1, 6),
            (1, 7),
            (2, 1),
            (2, 2),
            (2, 3),
            (2, 4),
            (2, 5),
            (2, 6),
            (2, 7),
        ]
    # modify second dataset  --------------------------------------------------------------------
    resource2["keywords"] = [
        #  "Product type: Reanalysis",  # removed
        "Spatial coverage: Global",
        "Temporal coverage: Past",
        "Variable domain: Land (hydrology)",
        "Variable domain: Land (physics)",
        "Variable domain: Land (biosphere)",
        "Provider: Copernicus C3S",
    ]
    resource2["licence_uids"] = [
        "licence-to-use-copernicus-products",
        "eumetsat-cm-saf",  # added
    ]
    resource2["ds_contactemail"] = "a_new_test@email"
    # following fields properly tested apart
    resource2["form"] = "a new url for form.json"
    resource2["layout"] = "a new url for layout.json"
    resource2["form_data"] = "a new content of form.json"
    with session_obj() as session:
        manager.resource_sync(session, resource2, storage_settings)
        manager.update_related_resources(session)
        session.commit()

    with session_obj() as session:
        all_db_resources = session.scalars(sa.select(database.Resource)).all()
        utils.compare_resources_with_dumped_file(
            all_db_resources,
            os.path.join(TESTDATA_PATH, "dumped_resources2.txt"),
            exclude_fields=("record_update", "resource_id", "search_field"),
        )
        assert set(
            session.execute(
                sa.text(
                    "select resource_id, licence_id "
                    "from resources_licences "
                    "order by resource_id, licence_id"
                )
            ).all()
        ) == set(
            [
                (1, uid_id_licence_map["licence-to-use-copernicus-products"]),
                (2, uid_id_licence_map["eumetsat-cm-saf"]),
                (2, uid_id_licence_map["licence-to-use-copernicus-products"]),
            ]
        )
        assert session.execute(
            sa.text(
                "select parent_resource_id, child_resource_id "
                "from related_resources "
                "order by parent_resource_id"
            )
        ).all() == [(1, 2)]

    # reset globals for tests following
    config.dbsettings = None
    config.storagesettings = None

    assert session.execute(sa.text("select resource_uid from resources")).all() == [
        ("reanalysis-era5-land",),
        ("reanalysis-era5-land-monthly-means",),
    ]
    manager.remove_datasets(session, keep_resource_uids=["reanalysis-era5-land"])
    session.commit()
    with session_obj() as session:
        assert session.execute(sa.text("select resource_uid from resources")).all() == [
            ("reanalysis-era5-land",),
        ]


def test_find_related_resources():
    def _to_testable_structure(raw_related):
        return [[r.resource_uid for r in t] for t in raw_related]

    res1 = database.Resource(
        resource_id=1, resource_uid="res1", related_resources_keywords=["aaa"]
    )
    res2 = database.Resource(
        resource_id=2, resource_uid="res2", related_resources_keywords=["aaa", "bbb"]
    )
    res3 = database.Resource(
        resource_id=3, resource_uid="res3", related_resources_keywords=["ccc"]
    )
    res4 = database.Resource(
        resource_id=4,
        resource_uid="res4",
        related_resources_keywords=["aaa"],
        hidden=True,
    )
    related = manager.find_related_resources([res1, res2, res3, res4])

    assert _to_testable_structure(related) == [
        ["res1", "res2"],
        ["res2", "res1"],
        ["res4", "res1"],
        ["res4", "res2"],
    ]

    related = manager.find_related_resources(
        [res1, res2, res3, res4], only_involving_uid="res2"
    )

    assert _to_testable_structure(related) == [
        ["res1", "res2"],
        ["res2", "res1"],
        ["res4", "res2"],
    ]

    res2.hidden = True
    related = manager.find_related_resources([res1, res2, res3, res4])

    assert _to_testable_structure(related) == [
        ["res2", "res1"],
        ["res4", "res1"],
    ]

    res1 = database.Resource(
        resource_id=1,
        resource_uid="res1",
        related_resources_keywords=[],
        keywords=[
            database.Keyword(keyword_id=1, keyword_name="aaa"),
            database.Keyword(keyword_id=2, keyword_name="bbb"),
        ],
    )
    res2 = database.Resource(
        resource_id=2,
        resource_uid="res2",
        related_resources_keywords=[],
        keywords=[
            database.Keyword(keyword_id=1, keyword_name="aaa"),
            database.Keyword(keyword_id=2, keyword_name="bbb"),
            database.Keyword(keyword_id=2, keyword_name="ccc"),
        ],
    )
    res3 = database.Resource(
        resource_id=1,
        resource_uid="res3",
        related_resources_keywords=[],
        keywords=[
            database.Keyword(keyword_id=1, keyword_name="aaa"),
            database.Keyword(keyword_id=2, keyword_name="bbb"),
            database.Keyword(keyword_id=2, keyword_name="ddd"),
        ],
    )
    related = manager.find_related_resources([res1, res2])

    assert _to_testable_structure(related) == [
        ["res1", "res2"],
    ]

    res2.hidden = True
    related = manager.find_related_resources([res1, res2])

    assert _to_testable_structure(related) == []
